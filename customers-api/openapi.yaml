openapi: 3.0.3
info:
  title: Customers API
  description: API for managing customers in B2B Orders System
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Local development server

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  service:
                    type: string
                  status:
                    type: string
                  timestamp:
                    type: string

  /customers:
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 255
                email:
                  type: string
                  format: email
                phone:
                  type: string
                  maxLength: 50
            example:
              name: "ACME Corporation"
              email: "ops@acme.com"
              phone: "+1-555-0101"
      responses:
        '201':
          description: Customer created successfully
        '400':
          description: Validation error
        '409':
          description: Email already exists

    get:
      summary: Search customers
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: cursor
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
            maximum: 100
      responses:
        '200':
          description: List of customers

  /customers/{id}:
    get:
      summary: Get customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer details
        '404':
          description: Customer not found

    put:
      summary: Update customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Customer updated
        '404':
          description: Customer not found

    delete:
      summary: Delete customer (soft delete)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer deleted
        '404':
          description: Customer not found

  /internal/customers/{id}:
    get:
      summary: Get customer by ID (internal service endpoint)
      security:
        - ServiceToken: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer details
        '401':
          description: Unauthorized
        '404':
          description: Customer not found

components:
  securitySchemes:
    ServiceToken:
      type: http
      scheme: bearer
