openapi: 3.0.3
info:
  title: Orders API
  description: API for managing products and orders in B2B Orders System
  version: 1.0.0
servers:
  - url: http://localhost:3002
    description: Local development server

paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is healthy

  /products:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sku
                - name
                - price_cents
                - stock
              properties:
                sku:
                  type: string
                  maxLength: 100
                name:
                  type: string
                  maxLength: 255
                price_cents:
                  type: integer
                  minimum: 0
                stock:
                  type: integer
                  minimum: 0
            example:
              sku: "SKU-LAPTOP-001"
              name: "Business Laptop Pro 15"
              price_cents: 129900
              stock: 50
      responses:
        '201':
          description: Product created
        '400':
          description: Validation error

    get:
      summary: Search products
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: cursor
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of products

  /products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
        '404':
          description: Product not found

    patch:
      summary: Update product price or stock
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price_cents:
                  type: integer
                stock:
                  type: integer
      responses:
        '200':
          description: Product updated
        '404':
          description: Product not found

  /orders:
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customer_id
                - items
              properties:
                customer_id:
                  type: integer
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      qty:
                        type: integer
            example:
              customer_id: 1
              items:
                - product_id: 2
                  qty: 3
      responses:
        '201':
          description: Order created
        '400':
          description: Validation error or insufficient stock
        '404':
          description: Customer not found

    get:
      summary: Search orders
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [CREATED, CONFIRMED, CANCELED]
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: cursor
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of orders

  /orders/{id}:
    get:
      summary: Get order by ID with items
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
        '404':
          description: Order not found

  /orders/{id}/confirm:
    post:
      summary: Confirm order (idempotent)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: X-Idempotency-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order confirmed
        '400':
          description: Cannot confirm order
        '404':
          description: Order not found

  /orders/{id}/cancel:
    post:
      summary: Cancel order and restore stock
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order canceled
        '400':
          description: Cannot cancel order
        '404':
          description: Order not found
